import random
import sys
import time
import turtle
from datetime import datetime

import keyboard
from PIL import Image
# color definition:  0 = green, 1 = yellow, 2 = yellow & green
# angel definition:  0 = no rotate, 1 = 90 degree rotate, 2 = 180 degree, 3 = 270 degree


class Square(object):
    def __init__(self, color, angel):
        self.color = color
        self.angel = angel * 90

    def draw(self, x, y):
        pass


def generate_symmetry(type):
    # 3 types, center, up/down, left/right
    pass


def draw_grid(level):
    grid_x = [grid_width // (-2)]
    grid_y = [grid_height // 2]
    grid = turtle.Turtle()
    grid.hideturtle()
    grid.pensize(1)
    grid.color('black')
    grid.speed(0)
    grid.penup()
    grid.setposition(grid_width // (-2), grid_height // 2)
    grid.pendown()
    grid.setheading(0)
    for _ in range(4):
        grid.fd(grid_width)
        grid.right(90)
    grid.penup()

    for i in range(1, level - 2):
        x = i * (grid_width // 4) - grid_width // 2
        y = grid_height // 2 - i * (grid_height // 4)
        grid_x.append(x)
        grid_y.append(y)
    grid_x.append(grid_width // 2)
    grid_y.append(grid_height // (-2))

    return grid_x, grid_y



time_to_remember = 30
canvas_width = 600
canvas_height = 600

today = datetime.now().date().strftime('%Y_%m_%d')
folder = 'e:\\einom\\Documents\\___SOPHIA____\\--Sophia K2 Folder\\BAIHUA_LOGICS\\'

wn = turtle.Screen()
wn.bgcolor("white")
wn.title("color_matrix")
wn.setup(canvas_width, canvas_height)
grid_width = canvas_width - 200
grid_height = canvas_height - 200

ct_pen = turtle.Turtle()
ct_pen.hideturtle()
ct_pen.pensize(3)
ct_pen.color('red')
ct_pen.speed(0)
ct_style = ('Courier', 30, 'bold')
style = ('Courier', 10, 'bold')

level = 3

# level has 3x3 & 4X4
grid_x, grid_y = draw_grid(level)

print(grid_x)
print(grid_y)


while True:
    pass